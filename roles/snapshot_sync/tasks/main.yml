---
- name: Include set_system_settings task
  ansible.builtin.include_tasks: set_system_settings.yml

- name: Include install_aws_cli task
  ansible.builtin.include_tasks: install_aws_cli.yml

- name: Stop service
  ansible.builtin.systemd:
    name: "{{ service_identifier }}"
    state: stopped

- name: Clear data folder directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop: "{{ snapshot_sync_directories[type] }}"
  when: clean_database | default(false) | bool

- name: Recreate empty data directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: "{{ service_identifier }}"
    group: "{{ service_identifier }}"
    mode: "0755"
  loop: "{{ snapshot_sync_directories[type] }}"
  when: clean_database | default(false) | bool

- name: Write temporary aws configuration
  ansible.builtin.copy:
    dest: "{{ tmp_dir }}/aws.conf"
    mode: "0600"
    content: "{{ snapshot_sync_aws_config_content }}"

- name: Sync snapshot
  ansible.builtin.command: >
    aws s3 sync "{{ supra[type].snapshot_url }}/{{ item.src }}/" "{{ item.dest }}" 
    --endpoint-url {{ supra.snapshot_endpoint_url }} 
    --delete --only-show-errors --cli-connect-timeout 300 --cli-read-timeout 300
  environment:
    AWS_CONFIG_FILE: "{{ tmp_dir }}/aws.conf"
    AWS_ACCESS_KEY_ID: "{{ vault.supra.external[env].cloudflare_access_key_id }}"
    AWS_SECRET_ACCESS_KEY: "{{ vault.supra.external[env].cloudflare_secret_access_key }}"
  async: 100000
  poll: 20
  retries: 30
  delay: 10
  loop: "{{ sync_paths[type] }}"
  register: aws_sync_result
  changed_when: aws_sync_result.stdout is defined and aws_sync_result.stdout != ""
  notify:
    - Restart service
  vars:
    sync_paths:
      fullnode:
        - { src: store, dest: "{{ snapshot_sync_store_dir }}" }
        - { src: archive, dest: "{{ snapshot_sync_archive_dir }}" }
      validator:
        - { src: store, dest: "{{ snapshot_sync_smr_storage_dir }}" }

- name: Set ownership of synced files
  ansible.builtin.file:
    path: "{{ item }}"
    owner: "{{ service_identifier }}"
    group: "{{ service_identifier }}"
    recurse: true
  loop: "{{ snapshot_sync_directories[type] }}"

- name: Clean up temporary aws configuration
  ansible.builtin.file:
    path: "{{ tmp_dir }}/aws.conf"
    state: absent
