---
- name: Include user creation task for supra validator
  ansible.builtin.include_tasks: tasks/create_user_and_directories.yml
  vars:
    home: "{{ validator_home_dir }}"
    directories: "{{ validator_directories }}"

- name: Create Supra Validator Docker container and copy binary
  vars:
    container_name: supra_validator
  block:
    - name: Create temporary Supra validator container for binary extraction
      community.docker.docker_container:
        name: "{{ container_name }}"
        image: "{{ supra.validator.source_url }}:{{ supra.validator.version }}"
        state: present
        recreate: true

    - name: Copy Supra validator binary
      ansible.builtin.shell: >
        docker cp {{ container_name }}:/supra/supra {{ validator_bin_dir }}/{{ service_identifier }}
      args:
        executable: /bin/bash
      register: copy_result
      changed_when: copy_result.rc == 0
      failed_when:
        - copy_result.rc != 0
        - "'No such container' in copy_result.stderr"

    - name: Ensure Supra validator binary has the correct permissions
      ansible.builtin.file:
        path: "{{ validator_bin_dir }}/{{ service_identifier }}"
        owner: root
        group: root
        mode: "0755"

  always:
    - name: Remove Supra validator container
      community.docker.docker_container:
        name: "{{ container_name }}"
        state: absent
      notify:
        - Reload service
        - Restart service

- name: Copy smr_settings.toml file
  ansible.builtin.template:
    src: "{{ env }}/smr_settings.toml.j2"
    dest: "{{ validator_smr_settings_file_path }}"
    owner: "{{ service_identifier }}"
    group: "{{ service_identifier }}"
    mode: "0644"

- name: Download and Copy Genesis Blob Based on Environment
  block:
    - name: Download genesis from URL
      ansible.builtin.get_url:
        url: https://mainnet-data.supra.com/configs/genesis.blob
        dest: "{{ validator_config_dir }}"
        owner: "{{ service_identifier }}"
        group: "{{ service_identifier }}"
        mode: "0644"
      when: env == mainnet

    - name: Copy genesis file
      ansible.builtin.copy:
        src: "{{ env }}/{{ validator_genesis_blob_file_name }}"
        dest: "{{ fullnode_config_dir }}"
        owner: "{{ service_identifier }}"
        group: "{{ service_identifier }}"
        mode: "0644"
      when: env == testnet

- name: Copy validator certificates, key, and genesis config
  ansible.builtin.copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ service_identifier }}"
    group: "{{ service_identifier }}"
    mode: "0644"
  loop:
    - { src: "{{ env }}/certs/{{ validator_supra_key_file_name }}", dest: "{{ validator_supra_key_file_path }}" }
    - { src: "{{ env }}/certs/{{ validator_supra_certificate_file_name }}", dest: "{{ validator_supra_certificate_file_path }}" }
    - { src: "{{ env }}/certs/{{ validator_ca_certificate_file_name }}", dest: "{{ validator_ca_certificate_file_path }}" }
    - { src: "{{ env }}/{{ validator_genesis_configs_file_name }}", dest: "{{ validator_config_dir }}" }
    - { src: "{{ env }}/{{ validator_supra_committes_file_name }}", dest: "{{ validator_config_dir }}" }
    - { src: "{{ env }}/{{ validator_smr_public_key_name }}", dest: "{{ validator_config_dir }}" }
    - { src: "{{ env }}/{{ validator_smr_secret_key_name }}", dest: "{{ validator_config_dir }}" }
    - { src: "{{ env }}/{{ validator_identity_file_name }}", dest: "{{ validator_config_dir }}" }
    - { src: "{{ env }}/{{ validator_public_identity_file_name }}", dest: "{{ validator_config_dir }}" }
    - { src: "{{ env }}/{{ validator_genesis_signature_file_name }}", dest: "{{ validator_config_dir }}" }

- name: Fetch secrets from HCP Vault and save to files
  block:
    - name: Fetch authority key and save
      ansible.builtin.include_tasks: tasks/get_and_save_vault_secret.yml
      vars:
        vault_secret_source_path: "{{ project }}/{{ org }}/{{ type }}/{{ bridge_authority_key_file_name }}"
        secret_destination_path: "{{ validator_env_dir }}/{{ service_identifier }}.secrets.env"
        secret_type: environment

- name: Copy supra validator systemd environment files
  ansible.builtin.template:
    src: general.env.j2
    dest: "{{ validator_env_dir }}/{{ service_identifier }}.env"
    owner: "{{ service_identifier }}"
    group: "{{ service_identifier }}"
    mode: "0644"

- name: Copy supra-validator-node systemd service file
  ansible.builtin.template:
    src: "{{ env }}/supra.service.j2"
    dest: /etc/systemd/system/{{ service_identifier }}.service
    owner: root
    group: root
    mode: "0644"
  notify:
    - Reload service
    - Restart service

- name: Open supra validator node p2p port
  community.general.ufw:
    rule: allow
    port: "{{ supra.validator.ports.p2p_port }}"
    proto: tcp
    comment: Open p2p port for supra validator
